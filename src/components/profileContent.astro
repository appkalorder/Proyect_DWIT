---
import Panel from "@components/PanelBody.astro";
---

<div class="max-w-2xl mx-auto p-4">
  <Panel>
    <h2 class="text-xl font-bold mb-6 text-gray-900 dark:text-white">
      Editar Perfil
    </h2>

    <form id="profileForm" class="space-y-6">
      <div>
        <label
          class="block text-sm font-medium text-gray-700 dark:text-gray-300"
        >
          Nombre
        </label>
        <input
          type="text"
          name="nombre"
          id="nombre"
          class="mt-1 py-1 px-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
        />
      </div>

      <div>
        <label
          class="block text-sm font-medium text-gray-700 dark:text-gray-300"
        >
          Correo
        </label>
        <input
          type="email"
          name="correo"
          id="correo"
          class="mt-1 py-1 px-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
        />
      </div>

      <div>
        <label
          class="block text-sm font-medium text-gray-700 dark:text-gray-300"
        >
          Fecha de Nacimiento
        </label>
        <input
          type="date"
          name="fecha_nacimiento"
          id="fecha_nacimiento"
          min="0"
          max="120"
          class="mt-1 py-1 px-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
        />
      </div>

      <div>
        <label
          class="block text-sm font-medium text-gray-700 dark:text-gray-300"
        >
          Años Entrenando
        </label>
        <input
          type="number"
          name="años_entrenando"
          id="años_entrenando"
          class="mt-1 py-1 px-2 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
        />
      </div>

      <div class="flex justify-between space-x-3">
        <button
          type="button"
          id="deleteUserBtn"
          class="px-4 py-2 text-sm font-medium text-white bg-red-600 hover:bg-red-700 rounded-md"
        >
          Eliminar Cuenta
        </button>
        <div class="flex space-x-3">
          <button
            type="button"
            onclick="window.history.back()"
            class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600 rounded-md"
          >
            Cancelar
          </button>
          <button
            type="submit"
            class="px-4 py-2 text-sm font-medium dark:bg-gray-100 bg-gray-900 text-gray-100 dark:text-gray-900 hover:bg-gray-700 dark:hover:bg-gray-400 rounded-md"
          >
            Guardar Cambios
          </button>
        </div>
      </div>
    </form>
  </Panel>
</div>

<script>
  const form = document.getElementById('profileForm');
  const user = JSON.parse(localStorage.getItem('user') || '{}');
  const deleteBtn = document.getElementById('deleteUserBtn');

  // Pre-fill form with user data
  if (user.id) {
    Object.keys(user).forEach(key => {
      const input = document.getElementById(key);
      if (input) {
        input.value = user[key] || '';
      }
    });
  }

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    const updatedUser = {
      id: user.id,
      nombre: formData.get('nombre'),
      correo: formData.get('correo'),
      fecha_nacimiento: formData.get('fecha_nacimiento'),
      años_entrenando: formData.get('años_entrenando')
    };

    try {
      const response = await fetch('http://localhost:8080/actualizar_usuario.php', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(updatedUser)
      });

      const data = await response.json();

      if (response.ok) {
        localStorage.setItem('user', JSON.stringify(data));
        window.location.href = '/';
      } else {
        throw new Error(data.error || 'Error al actualizar el perfil');
      }
    } catch (error) {
      console.error('Error:', error);
    }
  });
  
  deleteBtn?.addEventListener('click', async () => {
    if (!user?.id) return;

    if (confirm('¿Estás seguro de que quieres eliminar tu cuenta? Esta acción no se puede deshacer.')) {
      try {
        // Add debug log
        console.log('Attempting to delete user:', user.id);

        const response = await fetch(`http://localhost:8080/eliminar_usuario.php`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          body: JSON.stringify({ id: user.id })
        });

        // Add debug log
        console.log('Delete response status:', response.status);
        
        const data = await response.json();
        console.log('Delete response data:', data);

        if (response.ok) {
          localStorage.removeItem('user');
          alert('Usuario eliminado correctamente');
          window.location.href = '/login';
        } else {
          throw new Error(data.error || 'Error al eliminar usuario');
        }
      } catch (error) {
        console.error('Error:', error);
      }
    }
  });
</script>